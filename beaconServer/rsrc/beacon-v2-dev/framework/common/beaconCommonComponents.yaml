$schema: https://json-schema.org/draft/2020-12/schema
title: Beacon Common Components
description: "Definition of relatively simple components used in different points\
  \ of the Beacon specification, both in requests and responses, therefore not associated\
  \ exclusively with one or the other.\n If a component is complex a separated schema\
  \ is provided."
type: object
definitions:
  $schema:
    type: string
    $comment: 'TO REVIEW: adding a `format` or `regex` attribute that validates correctly
      against a file path (relative).'
    description: Refers to the JSON Schema which describes the set of valid attributes
      for this particular document type. This attribute is mostly used in schemas
      that should be tested in Beacon implementations.
  BeaconId:
    description: the Id of a Beacon. Usually a reversed domain string, but any URI
      is acceptable. The purpose of this attribute is, in the context of a Beacon
      network, to disambiguate responses coming from different Beacons.
    type: string
    example: org.example.beacon.v2
  ApiVersion:
    description: an API version.
    type: string
    example: v2.0
  BeaconError:
    description: Beacon-specific error.
    type: object
    required:
      - errorCode
    properties:
      errorCode:
        type: integer
        format: int32
        examples:
          - '404'
        description: Entry not found
      errorMessage:
        type: string
        examples:
          - the provided parameters are incomplete. 'xyz' is missing.
  ListOfSchemas:
    description: Set of schemas to be used in the response to a request.
    type: array
    items:
      $ref: '#/definitions/SchemasPerEntity'
  SchemasPerEntity:
    description: Schema to be used for the requested entry type in the response.
    type: object
    properties:
      entityType:
        type: string
        example: Individual
        $comment: 'TO REVIEW: Should that refer to a concept d? or would that include
          an undesired dependency to the configuration?'
      schema:
        type: string
        examples:
          - ./ga4gh-beacon-dataset-v2.0.0
          - https://www.example.org/schemas/ga4gh-beacon-dataset-v2.0.0.json
        $comment: "TO DO: Add the correct format as 'uri' or 'regex'"
  Pagination:
    description: Pagination to apply or that has been applied on the results.
    type: object
    properties:
      skip:
        $ref: '#/definitions/Skip'
      limit:
        $ref: '#/definitions/Limit'
  Skip:
    description: "In the request: number of pages to skip.\n In the response: number\
      \ of pages that has been skipped."
    type: integer
    minimum: 0
    default: 0
    example: 0
  Limit:
    description: "Size of the page.\n\nUse `0` to return all the results or the maximum\
      \ allowed by the Beacon, if there is any."
    type: integer
    minimum: 0
    default: 10
    example: 10
  IncludeResultsetResponses:
    description: Indicator of whether responses from every Resultset should be included
      in the response to this request or just the ones with positive, negative results
      or no details at all. If null (not specified), the default value of 'HIT' is
      assumed. This parameter allows for returning boolean/counting results although
      the Beacon instance is capable to return record level details.
    type: string
    enum:
      - ALL
      - HIT
      - MISS
      - NONE
    default: HIT
    examples:
      - ALL
      - HIT
      - MISS
      - NONE
  Filters:
    description: Ontology based filters. CURIE syntax is encouraged to be used.
    type: array
    items:
      type: string
    example:
      - BTO:0000199
      - PATO:0000383
  Exists:
    description: Indicator of whether any record was observed in any of the collections
      queried. This should be non-null.
    type: boolean
    examples:
      - true
  NumTotalResults:
    description: Total number of results. NOT the number of results returned in this
      batch, but the total obtained by the query.
    type: integer
    minimum: 0
    examples:
      - 123
  Info:
    description: Placeholder to allow the Beacon to return any additional information
      that is necessary or could be of interest in relation to the query or the entry
      returned. It is recommended to encapsulate additional informations in this attribute
      instead of directly adding attributes at the same level than the others in order
      to avoid collision in the names of attributes in future versions of the specification.
    type: object
  ListOfHandovers:
    description: Set of handovers to be added in one section the response.
    type: array
    items:
      description: Requested schema to be used for individuals in the response.
      $ref: '#/definitions/Handover'
  Handover:
    type: object
    description: 'A handover is a typed link for attaching actionable links to results,
      non purely informational, requests. The goal of the handovers is to list the
      different actions available, e.g.: a link to a request access page, or to a
      temporarily saved detailed response, which can include a temporary token.'
    required:
      - handoverType
      - url
    properties:
      handoverType:
        $ref: '#/definitions/HandoverType'
      note:
        type: string
        description: An optional text including considerations on the handover link
          provided.
        example: This handover link provides access to a summarized VCF.
      url:
        type: string
        format: uri
        description: "URL endpoint to where the handover process could progress (in\
          \ RFC\n3986 format)."
        example: https://api.mygenomeservice.org/Handover/9dcc48d7-fc88-11e8-9110-b0c592dbf8c0/
  HandoverType:
    type: object
    required:
      - id
    description: "Handover type, as an Ontology_term object with CURIE syntax for\
      \ the\n`id` value."
    properties:
      id:
        type: string
        description: Use `CUSTOM` for the `id` when no ontology is available.
        default: CUSTOM
        example: EFO:0004157
      label:
        type: string
        description: This would be the "preferred Label" in the case of an ontology
          term.
        default:
        example: BAM format
