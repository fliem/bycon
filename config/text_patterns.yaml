---
line_cleanup:
  description: >-
    The cleanup patterns are match => replace regex patterns to remove
    "empirically determined" lint from the input files, where this may
    interfere with later regexing.
  cleanup:
    - m: '!Sample_characteristics_ch\d ='
      s: ""
    - m: '(?i)grade[^\w]+?not applicable'
      s: ""
    - m: '(?i)stage[^\w]+?not applicable'
      s: ""
    - m: '(?i)grade[^\w]+?grade'
      s: "grade:"
    - m: 't-status[^\:]+?: '
      s: 'T'

extraction_scopes:
  description: >-
    Detection and processing of clinical scopes goes through several stages:
    1. line cleanup - so far run for the input before processing the individual
    scopes
    2. line match using sme general pattern expected in all lines containing
    data for the current scope (`filter` pattern)
    3. finding and extracting the relevant data by looping over a list of
    specific patterns with memorized matches (`find`)
    4. post-processing using empirical cleanp replacements (`cleanup`)
    5. checking the correct structure (`final_check` - a global pattern can be
    used if other post-processing is performed)

  pathological_stage:
    filter: '(?i).*?stage'
    find:
      - '(?i).*?stage[^\w]+?(Dukes.? \w)(:?[^\w]|$)'
      - '(?i).*?stage[^\w]+?(Binet \w)(:?[^\w]|$)'
      - '(?i).*?stage[^\w]+?([i12340]\w*?)(:?[^\w]|$)'
    cleanup:
      - m: '(?i)IV'
        s: '4'
      - m: '(?i)III'
        s: '3'
      - m: '(?i)II'
        s: '2'
      - m: '(?i)I'
        s: '1'
      - m: '(?i)S'
        s: 's'
    final_check: '.+?'

  tumor_grade:
    filter: '(?i).*?grade'
    find:
      - '(?i).*?(Gleason grade \d)(:?[^\w]|$)'
      - '(?i).*?[^\-]grade[^\w]+?(\w+?)(:?[^\w]|$)'
      - '(?i).*?grade[^\w]+?((?:(?:well)|(?:moderately)|(?:poorly)) differentiated)(:?[^\w]|$)'
    cleanup:
      - m: '4'
        s: 'IV'
      - m: '3'
        s: 'III'
      - m: '2'
        s: 'II'
      - m: '1'
        s: 'I'
      - m: 'G'
        s: ''
    final_check: '.+?'

  pathological_tnm_findings:
    filter: '(?i).*?[^\w][pc]?(T[\dx](?:[^\d].*?$|$))|(N[\dx+](?:[^\d].*?$|$))|(M[\dx+](?:[^\d].*?$|$))'
    find:
      - '(?i)^.*?(([pc]?T[\dx][abc]?)[,;]? ?([pc]?N[\dx+][abc]?)?[,;]? ?([pc]?M[\dx+][abc]?)?)(:?[^\w]|$)'
    cleanup:
      - m: '[,; ]'
        s: ''
      - m: 't'
        s: 'T'
      - m: 'n'
        s: 'N'
      - m: 'm'
        s: 'M'
      - m: '(?i)o'
        s: '0'     
      - m: '(?i)A'
        s: 'a'
      - m: '(?i)B'
        s: 'b'
      - m: '(?i)C'
        s: 'c'
      - m: '(?i)P'
        s: 'p'
      - m: '(?i)X'
        s: 'x'
      - m: '[+]'
        s: '1'
    final_check: '([pc]T[\dx][abcd]?)?([pc]N[\dx][abcd]?)?([pc]M[\dx][abcd]?)?'

